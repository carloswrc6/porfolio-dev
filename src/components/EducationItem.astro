---
import LinkInline from './LinkInline.astro'

interface Props {
  title: string
  school: string
  date: string
}

const { title, school, date } = Astro.props
---

<div
  class="relative mx-12 pb-12 grid before:absolute before:left-[-35px] before:block before:h-full before:border-l-2 before:border-black/20 dark:before:border-white/15 before:content-[''] md:grid-cols-5 md:gap-10 md:space-x-4]"
>
  <div class="relative pb-12 md:col-span-2">
    <div class="sticky top-0">
      <span class="text-yellow-400 -left-[42px] absolute rounded-full text-5xl"
        >&bull;</span
      >

      <h3 class="text-xl font-bold text-yellow-400">{school}</h3>
      <h4 class="font-semibold text-xl text-gray-600 dark:text-white">
        {title}
      </h4>
      <time class="p-0 m-0 text-sm text-gray-600/80 dark:text-white/80"
        >{date}</time
      >
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    function toggleActions(event: any) {
      const button = event.target
      const actionsList =
        button.previousElementSibling.querySelector('.actions-list')
      if (actionsList.classList.contains('show')) {
        actionsList.classList.remove('show')
        button.textContent = 'Ver más'
      } else {
        actionsList.classList.add('show')
        button.textContent = 'Ver menos'
      }
    }

    document.querySelectorAll('.toggle-button').forEach((button) => {
      button.addEventListener('click', toggleActions)
    })
  })
</script>

<style>
  .toggle-button {
    /* display: block; */
    text-align: left;
    margin-left: auto;
  }

  .actions-list {
    transition:
      max-height 0.5s ease-out,
      opacity 0.5s ease-out;
    overflow: hidden;
    max-height: 0;
    opacity: 0;
  }

  .actions-list.show {
    max-height: 1000px; /* Ajusta según sea necesario */
    opacity: 1;
  }
</style>
