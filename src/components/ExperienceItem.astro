---
import LinkInline from './LinkInline.astro'

interface Props {
  title: string
  company: string
  description: string
  link?: string
  date: string
  actions?: Array<String>
  aptitudes?: Array<String>
}

const { title, company, description, link, date, actions, aptitudes } =
  Astro.props
---

<div
  class="relative mx-12 pb-12 grid before:absolute before:left-[-35px] before:block before:h-full before:border-l-2 before:border-black/20 dark:before:border-white/15 before:content-[''] md:grid-cols-5 md:gap-10 md:space-x-4]"
>
  <div class="relative pb-12 md:col-span-2">
    <div class="sticky top-0">
      <span class="text-yellow-400 -left-[42px] absolute rounded-full text-5xl"
        >&bull;</span
      >

      <h3 class="text-xl font-bold text-yellow-400">{title}</h3>
      <h4 class="font-semibold text-xl text-gray-600 dark:text-white">
        {company}
      </h4>
      <time class="p-0 m-0 text-sm text-gray-600/80 dark:text-white/80"
        >{date}</time
      >
    </div>
  </div>
  <div
    class="relative flex flex-col gap-2 pb-4 text-gray-600 dark:text-gray-300 md:col-span-3"
  >
    {description}
    <div class="text-gray-600 dark:text-gray-300">
      {
        actions && (
          <ul>
            <li class="pb-4 text-justify">- {actions[0]}</li>
            <div class="actions-list hidden">
              {actions.slice(1).map((action) => (
                <li class="pb-4 text-justify">- {action}</li>
              ))}
            </div>
          </ul>
        )
      }
      {
        actions && actions.length > 1 && (
          <button class="toggle-button mt-4 text-blue-500 hover:text-blue-700">
            Ver más
          </button>
        )
      }
    </div>
    {
      link && (
        <LinkInline href={link}>
          Saber más{' '}
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="w-5 icon icon-tabler icon-tabler-chevron-right"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            stroke-width="2"
            stroke="currentColor"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <>
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M9 6l6 6l-6 6" />
            </>
          </svg>
        </LinkInline>
      )
    }
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    function toggleActions(event: any) {
      const button = event.target
      const actionsList =
        button.previousElementSibling.querySelector('.actions-list')
      if (actionsList.classList.contains('hidden')) {
        actionsList.classList.remove('hidden')
        button.textContent = 'Ver menos'
      } else {
        actionsList.classList.add('hidden')
        button.textContent = 'Ver más'
      }
    }

    document.querySelectorAll('.toggle-button').forEach((button) => {
      button.addEventListener('click', toggleActions)
    })
  })
</script>
