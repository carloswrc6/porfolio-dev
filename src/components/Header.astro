---
import ThemeToggle from './ThemeToggle.astro'
// import LangToggle from './LangToggle.astro'
import MenuIcon from '@/components/icons/Menu.astro'

const navItems = [
  {
    title: 'Experiencia',
    label: 'experiencia',
    url: '/#experiencia',
  },
  {
    title: 'Proyectos',
    label: 'proyectos',
    url: '/#proyectos',
  },
  {
    title: 'Sobre mí',
    label: 'sobre-mi',
    url: '/#sobre-mi',
  },
  {
    title: 'Educación',
    label: 'educacion',
    url: '/#educacion',
  },
  {
    title: 'Habilidades',
    label: 'habilidades',
    url: '/#habilidades',
  },
]
---

<header
  class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2 max-[640px]:dark:bg-[#101030]"
>
  <nav
    class="flex px-3 text-sm font-medium rounded-full text-gray-600 dark:text-gray-200 justify-center items-center"
  >
    <button id="menu-toggle" class="md:hidden p-2 max-[640px]:mr-auto">
      <MenuIcon class="size-5" />
    </button>
    <div id="nav-items" class="hidden md:flex items-center">
      {
        navItems.map((link) => (
          <a
            class="relative block px-2 py-2 transition hover:text-yellow-500 dark:hover:text-yellow-400"
            aria-label={link.label}
            href={link.url}
          >
            {link.title}
          </a>
        ))
      }
    </div>
    <ThemeToggle />
    <!-- <LangToggle /> -->
  </nav>
</header>

<script>
  document.addEventListener('astro:page-load', () => {
    const sections = document.querySelectorAll('section')
    const navItems = document.querySelectorAll('header nav a')

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute('aria-label') == entry.target.id) {
              item.classList.add('text-yellow-500')
            } else {
              item.classList.remove('text-yellow-500')
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: '0px',
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === 'hidden') {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }

    // Toggle menu on small screens
    const menuToggle = document.getElementById('menu-toggle')
    const navItemsContainer = document.getElementById('nav-items')

    menuToggle?.addEventListener('click', () => {
      navItemsContainer?.classList.toggle('hidden')
    })
  })
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  @keyframes nav-shadown {
    to {
      @apply shadow-lg ring-1 backdrop-blur dark:bg-gray-800/90 bg-white/50 ring-white/10;
    }
  }

  @media (max-width: 640px) {
    header {
      margin-top: 0;
      background-color: rgb(244, 245, 254);
    }
    header nav {
      width: 100%;
      border-radius: 0;
      margin-top: 0;
      animation: none;
    }

    #nav-items {
      display: none;
      position: absolute;
      top: 100%;
      left: 0;
      width: 100%;
      padding: 1rem;
      background-color: rgba(255, 255, 255, 0.2);
      backdrop-filter: blur(15px);
      -webkit-backdrop-filter: blur(15px);
      box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.15);
      align-items: center;
      flex-direction: column;
    }

    #nav-items:not(.hidden) {
      display: flex;
    }
  }
</style>
